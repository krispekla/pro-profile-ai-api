//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/postgres"
)

var AuditLogEntries = newAuditLogEntriesTable("auth", "audit_log_entries", "")

type auditLogEntriesTable struct {
	postgres.Table

	// Columns
	InstanceID postgres.ColumnString
	ID         postgres.ColumnString
	Payload    postgres.ColumnString
	CreatedAt  postgres.ColumnTimestampz
	IPAddress  postgres.ColumnString

	AllColumns     postgres.ColumnList
	MutableColumns postgres.ColumnList
}

type AuditLogEntriesTable struct {
	auditLogEntriesTable

	EXCLUDED auditLogEntriesTable
}

// AS creates new AuditLogEntriesTable with assigned alias
func (a AuditLogEntriesTable) AS(alias string) *AuditLogEntriesTable {
	return newAuditLogEntriesTable(a.SchemaName(), a.TableName(), alias)
}

// Schema creates new AuditLogEntriesTable with assigned schema name
func (a AuditLogEntriesTable) FromSchema(schemaName string) *AuditLogEntriesTable {
	return newAuditLogEntriesTable(schemaName, a.TableName(), a.Alias())
}

// WithPrefix creates new AuditLogEntriesTable with assigned table prefix
func (a AuditLogEntriesTable) WithPrefix(prefix string) *AuditLogEntriesTable {
	return newAuditLogEntriesTable(a.SchemaName(), prefix+a.TableName(), a.TableName())
}

// WithSuffix creates new AuditLogEntriesTable with assigned table suffix
func (a AuditLogEntriesTable) WithSuffix(suffix string) *AuditLogEntriesTable {
	return newAuditLogEntriesTable(a.SchemaName(), a.TableName()+suffix, a.TableName())
}

func newAuditLogEntriesTable(schemaName, tableName, alias string) *AuditLogEntriesTable {
	return &AuditLogEntriesTable{
		auditLogEntriesTable: newAuditLogEntriesTableImpl(schemaName, tableName, alias),
		EXCLUDED:             newAuditLogEntriesTableImpl("", "excluded", ""),
	}
}

func newAuditLogEntriesTableImpl(schemaName, tableName, alias string) auditLogEntriesTable {
	var (
		InstanceIDColumn = postgres.StringColumn("instance_id")
		IDColumn         = postgres.StringColumn("id")
		PayloadColumn    = postgres.StringColumn("payload")
		CreatedAtColumn  = postgres.TimestampzColumn("created_at")
		IPAddressColumn  = postgres.StringColumn("ip_address")
		allColumns       = postgres.ColumnList{InstanceIDColumn, IDColumn, PayloadColumn, CreatedAtColumn, IPAddressColumn}
		mutableColumns   = postgres.ColumnList{InstanceIDColumn, PayloadColumn, CreatedAtColumn, IPAddressColumn}
	)

	return auditLogEntriesTable{
		Table: postgres.NewTable(schemaName, tableName, alias, allColumns...),

		//Columns
		InstanceID: InstanceIDColumn,
		ID:         IDColumn,
		Payload:    PayloadColumn,
		CreatedAt:  CreatedAtColumn,
		IPAddress:  IPAddressColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
	}
}
