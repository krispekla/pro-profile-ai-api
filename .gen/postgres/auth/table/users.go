//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/postgres"
)

var Users = newUsersTable("auth", "users", "")

type usersTable struct {
	postgres.Table

	// Columns
	InstanceID               postgres.ColumnString
	ID                       postgres.ColumnString
	Aud                      postgres.ColumnString
	Role                     postgres.ColumnString
	Email                    postgres.ColumnString
	EncryptedPassword        postgres.ColumnString
	EmailConfirmedAt         postgres.ColumnTimestampz
	InvitedAt                postgres.ColumnTimestampz
	ConfirmationToken        postgres.ColumnString
	ConfirmationSentAt       postgres.ColumnTimestampz
	RecoveryToken            postgres.ColumnString
	RecoverySentAt           postgres.ColumnTimestampz
	EmailChangeTokenNew      postgres.ColumnString
	EmailChange              postgres.ColumnString
	EmailChangeSentAt        postgres.ColumnTimestampz
	LastSignInAt             postgres.ColumnTimestampz
	RawAppMetaData           postgres.ColumnString
	RawUserMetaData          postgres.ColumnString
	IsSuperAdmin             postgres.ColumnBool
	CreatedAt                postgres.ColumnTimestampz
	UpdatedAt                postgres.ColumnTimestampz
	Phone                    postgres.ColumnString
	PhoneConfirmedAt         postgres.ColumnTimestampz
	PhoneChange              postgres.ColumnString
	PhoneChangeToken         postgres.ColumnString
	PhoneChangeSentAt        postgres.ColumnTimestampz
	ConfirmedAt              postgres.ColumnTimestampz
	EmailChangeTokenCurrent  postgres.ColumnString
	EmailChangeConfirmStatus postgres.ColumnInteger
	BannedUntil              postgres.ColumnTimestampz
	ReauthenticationToken    postgres.ColumnString
	ReauthenticationSentAt   postgres.ColumnTimestampz
	IsSsoUser                postgres.ColumnBool
	DeletedAt                postgres.ColumnTimestampz
	StripeCustomerID         postgres.ColumnString

	AllColumns     postgres.ColumnList
	MutableColumns postgres.ColumnList
}

type UsersTable struct {
	usersTable

	EXCLUDED usersTable
}

// AS creates new UsersTable with assigned alias
func (a UsersTable) AS(alias string) *UsersTable {
	return newUsersTable(a.SchemaName(), a.TableName(), alias)
}

// Schema creates new UsersTable with assigned schema name
func (a UsersTable) FromSchema(schemaName string) *UsersTable {
	return newUsersTable(schemaName, a.TableName(), a.Alias())
}

// WithPrefix creates new UsersTable with assigned table prefix
func (a UsersTable) WithPrefix(prefix string) *UsersTable {
	return newUsersTable(a.SchemaName(), prefix+a.TableName(), a.TableName())
}

// WithSuffix creates new UsersTable with assigned table suffix
func (a UsersTable) WithSuffix(suffix string) *UsersTable {
	return newUsersTable(a.SchemaName(), a.TableName()+suffix, a.TableName())
}

func newUsersTable(schemaName, tableName, alias string) *UsersTable {
	return &UsersTable{
		usersTable: newUsersTableImpl(schemaName, tableName, alias),
		EXCLUDED:   newUsersTableImpl("", "excluded", ""),
	}
}

func newUsersTableImpl(schemaName, tableName, alias string) usersTable {
	var (
		InstanceIDColumn               = postgres.StringColumn("instance_id")
		IDColumn                       = postgres.StringColumn("id")
		AudColumn                      = postgres.StringColumn("aud")
		RoleColumn                     = postgres.StringColumn("role")
		EmailColumn                    = postgres.StringColumn("email")
		EncryptedPasswordColumn        = postgres.StringColumn("encrypted_password")
		EmailConfirmedAtColumn         = postgres.TimestampzColumn("email_confirmed_at")
		InvitedAtColumn                = postgres.TimestampzColumn("invited_at")
		ConfirmationTokenColumn        = postgres.StringColumn("confirmation_token")
		ConfirmationSentAtColumn       = postgres.TimestampzColumn("confirmation_sent_at")
		RecoveryTokenColumn            = postgres.StringColumn("recovery_token")
		RecoverySentAtColumn           = postgres.TimestampzColumn("recovery_sent_at")
		EmailChangeTokenNewColumn      = postgres.StringColumn("email_change_token_new")
		EmailChangeColumn              = postgres.StringColumn("email_change")
		EmailChangeSentAtColumn        = postgres.TimestampzColumn("email_change_sent_at")
		LastSignInAtColumn             = postgres.TimestampzColumn("last_sign_in_at")
		RawAppMetaDataColumn           = postgres.StringColumn("raw_app_meta_data")
		RawUserMetaDataColumn          = postgres.StringColumn("raw_user_meta_data")
		IsSuperAdminColumn             = postgres.BoolColumn("is_super_admin")
		CreatedAtColumn                = postgres.TimestampzColumn("created_at")
		UpdatedAtColumn                = postgres.TimestampzColumn("updated_at")
		PhoneColumn                    = postgres.StringColumn("phone")
		PhoneConfirmedAtColumn         = postgres.TimestampzColumn("phone_confirmed_at")
		PhoneChangeColumn              = postgres.StringColumn("phone_change")
		PhoneChangeTokenColumn         = postgres.StringColumn("phone_change_token")
		PhoneChangeSentAtColumn        = postgres.TimestampzColumn("phone_change_sent_at")
		ConfirmedAtColumn              = postgres.TimestampzColumn("confirmed_at")
		EmailChangeTokenCurrentColumn  = postgres.StringColumn("email_change_token_current")
		EmailChangeConfirmStatusColumn = postgres.IntegerColumn("email_change_confirm_status")
		BannedUntilColumn              = postgres.TimestampzColumn("banned_until")
		ReauthenticationTokenColumn    = postgres.StringColumn("reauthentication_token")
		ReauthenticationSentAtColumn   = postgres.TimestampzColumn("reauthentication_sent_at")
		IsSsoUserColumn                = postgres.BoolColumn("is_sso_user")
		DeletedAtColumn                = postgres.TimestampzColumn("deleted_at")
		StripeCustomerIDColumn         = postgres.StringColumn("stripe_customer_id")
		allColumns                     = postgres.ColumnList{InstanceIDColumn, IDColumn, AudColumn, RoleColumn, EmailColumn, EncryptedPasswordColumn, EmailConfirmedAtColumn, InvitedAtColumn, ConfirmationTokenColumn, ConfirmationSentAtColumn, RecoveryTokenColumn, RecoverySentAtColumn, EmailChangeTokenNewColumn, EmailChangeColumn, EmailChangeSentAtColumn, LastSignInAtColumn, RawAppMetaDataColumn, RawUserMetaDataColumn, IsSuperAdminColumn, CreatedAtColumn, UpdatedAtColumn, PhoneColumn, PhoneConfirmedAtColumn, PhoneChangeColumn, PhoneChangeTokenColumn, PhoneChangeSentAtColumn, ConfirmedAtColumn, EmailChangeTokenCurrentColumn, EmailChangeConfirmStatusColumn, BannedUntilColumn, ReauthenticationTokenColumn, ReauthenticationSentAtColumn, IsSsoUserColumn, DeletedAtColumn, StripeCustomerIDColumn}
		mutableColumns                 = postgres.ColumnList{InstanceIDColumn, AudColumn, RoleColumn, EmailColumn, EncryptedPasswordColumn, EmailConfirmedAtColumn, InvitedAtColumn, ConfirmationTokenColumn, ConfirmationSentAtColumn, RecoveryTokenColumn, RecoverySentAtColumn, EmailChangeTokenNewColumn, EmailChangeColumn, EmailChangeSentAtColumn, LastSignInAtColumn, RawAppMetaDataColumn, RawUserMetaDataColumn, IsSuperAdminColumn, CreatedAtColumn, UpdatedAtColumn, PhoneColumn, PhoneConfirmedAtColumn, PhoneChangeColumn, PhoneChangeTokenColumn, PhoneChangeSentAtColumn, EmailChangeTokenCurrentColumn, EmailChangeConfirmStatusColumn, BannedUntilColumn, ReauthenticationTokenColumn, ReauthenticationSentAtColumn, IsSsoUserColumn, DeletedAtColumn, StripeCustomerIDColumn}
	)

	return usersTable{
		Table: postgres.NewTable(schemaName, tableName, alias, allColumns...),

		//Columns
		InstanceID:               InstanceIDColumn,
		ID:                       IDColumn,
		Aud:                      AudColumn,
		Role:                     RoleColumn,
		Email:                    EmailColumn,
		EncryptedPassword:        EncryptedPasswordColumn,
		EmailConfirmedAt:         EmailConfirmedAtColumn,
		InvitedAt:                InvitedAtColumn,
		ConfirmationToken:        ConfirmationTokenColumn,
		ConfirmationSentAt:       ConfirmationSentAtColumn,
		RecoveryToken:            RecoveryTokenColumn,
		RecoverySentAt:           RecoverySentAtColumn,
		EmailChangeTokenNew:      EmailChangeTokenNewColumn,
		EmailChange:              EmailChangeColumn,
		EmailChangeSentAt:        EmailChangeSentAtColumn,
		LastSignInAt:             LastSignInAtColumn,
		RawAppMetaData:           RawAppMetaDataColumn,
		RawUserMetaData:          RawUserMetaDataColumn,
		IsSuperAdmin:             IsSuperAdminColumn,
		CreatedAt:                CreatedAtColumn,
		UpdatedAt:                UpdatedAtColumn,
		Phone:                    PhoneColumn,
		PhoneConfirmedAt:         PhoneConfirmedAtColumn,
		PhoneChange:              PhoneChangeColumn,
		PhoneChangeToken:         PhoneChangeTokenColumn,
		PhoneChangeSentAt:        PhoneChangeSentAtColumn,
		ConfirmedAt:              ConfirmedAtColumn,
		EmailChangeTokenCurrent:  EmailChangeTokenCurrentColumn,
		EmailChangeConfirmStatus: EmailChangeConfirmStatusColumn,
		BannedUntil:              BannedUntilColumn,
		ReauthenticationToken:    ReauthenticationTokenColumn,
		ReauthenticationSentAt:   ReauthenticationSentAtColumn,
		IsSsoUser:                IsSsoUserColumn,
		DeletedAt:                DeletedAtColumn,
		StripeCustomerID:         StripeCustomerIDColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
	}
}
