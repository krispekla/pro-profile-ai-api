//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/postgres"
)

var SamlProviders = newSamlProvidersTable("auth", "saml_providers", "")

type samlProvidersTable struct {
	postgres.Table

	// Columns
	ID               postgres.ColumnString
	SsoProviderID    postgres.ColumnString
	EntityID         postgres.ColumnString
	MetadataXML      postgres.ColumnString
	MetadataURL      postgres.ColumnString
	AttributeMapping postgres.ColumnString
	CreatedAt        postgres.ColumnTimestampz
	UpdatedAt        postgres.ColumnTimestampz

	AllColumns     postgres.ColumnList
	MutableColumns postgres.ColumnList
}

type SamlProvidersTable struct {
	samlProvidersTable

	EXCLUDED samlProvidersTable
}

// AS creates new SamlProvidersTable with assigned alias
func (a SamlProvidersTable) AS(alias string) *SamlProvidersTable {
	return newSamlProvidersTable(a.SchemaName(), a.TableName(), alias)
}

// Schema creates new SamlProvidersTable with assigned schema name
func (a SamlProvidersTable) FromSchema(schemaName string) *SamlProvidersTable {
	return newSamlProvidersTable(schemaName, a.TableName(), a.Alias())
}

// WithPrefix creates new SamlProvidersTable with assigned table prefix
func (a SamlProvidersTable) WithPrefix(prefix string) *SamlProvidersTable {
	return newSamlProvidersTable(a.SchemaName(), prefix+a.TableName(), a.TableName())
}

// WithSuffix creates new SamlProvidersTable with assigned table suffix
func (a SamlProvidersTable) WithSuffix(suffix string) *SamlProvidersTable {
	return newSamlProvidersTable(a.SchemaName(), a.TableName()+suffix, a.TableName())
}

func newSamlProvidersTable(schemaName, tableName, alias string) *SamlProvidersTable {
	return &SamlProvidersTable{
		samlProvidersTable: newSamlProvidersTableImpl(schemaName, tableName, alias),
		EXCLUDED:           newSamlProvidersTableImpl("", "excluded", ""),
	}
}

func newSamlProvidersTableImpl(schemaName, tableName, alias string) samlProvidersTable {
	var (
		IDColumn               = postgres.StringColumn("id")
		SsoProviderIDColumn    = postgres.StringColumn("sso_provider_id")
		EntityIDColumn         = postgres.StringColumn("entity_id")
		MetadataXMLColumn      = postgres.StringColumn("metadata_xml")
		MetadataURLColumn      = postgres.StringColumn("metadata_url")
		AttributeMappingColumn = postgres.StringColumn("attribute_mapping")
		CreatedAtColumn        = postgres.TimestampzColumn("created_at")
		UpdatedAtColumn        = postgres.TimestampzColumn("updated_at")
		allColumns             = postgres.ColumnList{IDColumn, SsoProviderIDColumn, EntityIDColumn, MetadataXMLColumn, MetadataURLColumn, AttributeMappingColumn, CreatedAtColumn, UpdatedAtColumn}
		mutableColumns         = postgres.ColumnList{SsoProviderIDColumn, EntityIDColumn, MetadataXMLColumn, MetadataURLColumn, AttributeMappingColumn, CreatedAtColumn, UpdatedAtColumn}
	)

	return samlProvidersTable{
		Table: postgres.NewTable(schemaName, tableName, alias, allColumns...),

		//Columns
		ID:               IDColumn,
		SsoProviderID:    SsoProviderIDColumn,
		EntityID:         EntityIDColumn,
		MetadataXML:      MetadataXMLColumn,
		MetadataURL:      MetadataURLColumn,
		AttributeMapping: AttributeMappingColumn,
		CreatedAt:        CreatedAtColumn,
		UpdatedAt:        UpdatedAtColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
	}
}
