//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package model

import "errors"

type OrderStatus string

const (
	OrderStatus_Created   OrderStatus = "created"
	OrderStatus_Pending   OrderStatus = "pending"
	OrderStatus_Paid      OrderStatus = "paid"
	OrderStatus_Cancelled OrderStatus = "cancelled"
	OrderStatus_Refunded  OrderStatus = "refunded"
)

func (e *OrderStatus) Scan(value interface{}) error {
	var enumValue string
	switch val := value.(type) {
	case string:
		enumValue = val
	case []byte:
		enumValue = string(val)
	default:
		return errors.New("jet: Invalid scan value for AllTypesEnum enum. Enum value has to be of type string or []byte")
	}

	switch enumValue {
	case "created":
		*e = OrderStatus_Created
	case "pending":
		*e = OrderStatus_Pending
	case "paid":
		*e = OrderStatus_Paid
	case "cancelled":
		*e = OrderStatus_Cancelled
	case "refunded":
		*e = OrderStatus_Refunded
	default:
		return errors.New("jet: Invalid scan value '" + enumValue + "' for OrderStatus enum")
	}

	return nil
}

func (e OrderStatus) String() string {
	return string(e)
}
