//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package model

import "errors"

type Age string

const (
	Age_Child   Age = "child"
	Age_Adult   Age = "adult"
	Age_Elderly Age = "elderly"
)

func (e *Age) Scan(value interface{}) error {
	var enumValue string
	switch val := value.(type) {
	case string:
		enumValue = val
	case []byte:
		enumValue = string(val)
	default:
		return errors.New("jet: Invalid scan value for AllTypesEnum enum. Enum value has to be of type string or []byte")
	}

	switch enumValue {
	case "child":
		*e = Age_Child
	case "adult":
		*e = Age_Adult
	case "elderly":
		*e = Age_Elderly
	default:
		return errors.New("jet: Invalid scan value '" + enumValue + "' for Age enum")
	}

	return nil
}

func (e Age) String() string {
	return string(e)
}
