//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package model

import "errors"

type EyeColor string

const (
	EyeColor_Brown EyeColor = "brown"
	EyeColor_Blue  EyeColor = "blue"
	EyeColor_Green EyeColor = "green"
	EyeColor_Gray  EyeColor = "gray"
)

func (e *EyeColor) Scan(value interface{}) error {
	var enumValue string
	switch val := value.(type) {
	case string:
		enumValue = val
	case []byte:
		enumValue = string(val)
	default:
		return errors.New("jet: Invalid scan value for AllTypesEnum enum. Enum value has to be of type string or []byte")
	}

	switch enumValue {
	case "brown":
		*e = EyeColor_Brown
	case "blue":
		*e = EyeColor_Blue
	case "green":
		*e = EyeColor_Green
	case "gray":
		*e = EyeColor_Gray
	default:
		return errors.New("jet: Invalid scan value '" + enumValue + "' for EyeColor enum")
	}

	return nil
}

func (e EyeColor) String() string {
	return string(e)
}
