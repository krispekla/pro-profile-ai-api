//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/postgres"
)

var GeneratedPackageImg = newGeneratedPackageImgTable("public", "generated_package_img", "")

type generatedPackageImgTable struct {
	postgres.Table

	// Columns
	ID                 postgres.ColumnInteger
	GeneratedPackageID postgres.ColumnInteger
	ImgURL             postgres.ColumnString
	ModelID            postgres.ColumnInteger
	Created            postgres.ColumnTimestamp

	AllColumns     postgres.ColumnList
	MutableColumns postgres.ColumnList
}

type GeneratedPackageImgTable struct {
	generatedPackageImgTable

	EXCLUDED generatedPackageImgTable
}

// AS creates new GeneratedPackageImgTable with assigned alias
func (a GeneratedPackageImgTable) AS(alias string) *GeneratedPackageImgTable {
	return newGeneratedPackageImgTable(a.SchemaName(), a.TableName(), alias)
}

// Schema creates new GeneratedPackageImgTable with assigned schema name
func (a GeneratedPackageImgTable) FromSchema(schemaName string) *GeneratedPackageImgTable {
	return newGeneratedPackageImgTable(schemaName, a.TableName(), a.Alias())
}

// WithPrefix creates new GeneratedPackageImgTable with assigned table prefix
func (a GeneratedPackageImgTable) WithPrefix(prefix string) *GeneratedPackageImgTable {
	return newGeneratedPackageImgTable(a.SchemaName(), prefix+a.TableName(), a.TableName())
}

// WithSuffix creates new GeneratedPackageImgTable with assigned table suffix
func (a GeneratedPackageImgTable) WithSuffix(suffix string) *GeneratedPackageImgTable {
	return newGeneratedPackageImgTable(a.SchemaName(), a.TableName()+suffix, a.TableName())
}

func newGeneratedPackageImgTable(schemaName, tableName, alias string) *GeneratedPackageImgTable {
	return &GeneratedPackageImgTable{
		generatedPackageImgTable: newGeneratedPackageImgTableImpl(schemaName, tableName, alias),
		EXCLUDED:                 newGeneratedPackageImgTableImpl("", "excluded", ""),
	}
}

func newGeneratedPackageImgTableImpl(schemaName, tableName, alias string) generatedPackageImgTable {
	var (
		IDColumn                 = postgres.IntegerColumn("id")
		GeneratedPackageIDColumn = postgres.IntegerColumn("generated_package_id")
		ImgURLColumn             = postgres.StringColumn("img_url")
		ModelIDColumn            = postgres.IntegerColumn("model_id")
		CreatedColumn            = postgres.TimestampColumn("created")
		allColumns               = postgres.ColumnList{IDColumn, GeneratedPackageIDColumn, ImgURLColumn, ModelIDColumn, CreatedColumn}
		mutableColumns           = postgres.ColumnList{GeneratedPackageIDColumn, ImgURLColumn, ModelIDColumn, CreatedColumn}
	)

	return generatedPackageImgTable{
		Table: postgres.NewTable(schemaName, tableName, alias, allColumns...),

		//Columns
		ID:                 IDColumn,
		GeneratedPackageID: GeneratedPackageIDColumn,
		ImgURL:             ImgURLColumn,
		ModelID:            ModelIDColumn,
		Created:            CreatedColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
	}
}
